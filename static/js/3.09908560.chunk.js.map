{"version":3,"sources":["Components/HOC/withAuthRedirect.jsx","Components/Users/Users.module.css","Assets/Photo/userPhoto.png","../node_modules/classnames/index.js","Components/Users/User.jsx","Components/Users/Users.jsx","redux/Selectors/users-selectors.js","Components/Users/UsersContainer.jsx"],"names":["mapStateToPropsRedirected","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","module","exports","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","default","User","followingInProgress","user","unfollow","follow","u","id","src","photos","small","userPhoto","alt","style","img","followed","disabled","some","onClick","name","status","Users","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","paginator","filter","p","map","cn","selectedPage","currentPage","pageNumber","e","onPageChange","userBlock","users","getUsers","usersPage","getPageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","currentPageChanger","this","requestUsers","Preloader","React","compose","setUsers","setUsersTotalCount","setCurrentPage","toggleIsFetching","toggleFollowingInProgress"],"mappings":"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","file":"static/js/3.09908560.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n\r\nlet mapStateToPropsRedirected = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let authWrapperContainer = (props) => {\r\n        if (!props.isAuth) return <Redirect to = '/login' />\r\n        return <Component {...props} />\r\n    }\r\n   \r\n\r\nlet ConnectedAuthRedirectComponent = connect (mapStateToPropsRedirected) (authWrapperContainer);\r\n\r\nreturn ConnectedAuthRedirectComponent\r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Users_paginator__1KcHa\",\"pageNumber\":\"Users_pageNumber__1jrYh\",\"selectedPage\":\"Users_selectedPage__2I0HA\",\"userBlock\":\"Users_userBlock__sBJrI\"};","module.exports = __webpack_public_path__ + \"static/media/userPhoto.6db09181.png\";","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react'\r\nimport classes from './Users.module.css'\r\nimport userPhoto from '../../Assets/Photo/userPhoto.png'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nlet User =({followingInProgress, user, unfollow, follow }) =>{\r\n\r\n    let u = user;\r\n\r\n            return (<div>\r\n\r\n                <span>\r\n                    <NavLink to = {'/Profile/' + u.id}><img src={ u.photos.small != null ? u.photos.small : userPhoto } alt='small pic' style={classes.img}/></NavLink>\r\n                    <div>{u.followed \r\n                    ? <button disabled= {followingInProgress.some(id=> id===u.id)} onClick ={()=>{\r\n                        unfollow(u.id)}\r\n                    }>Unfollow</button> \r\n                    : <button disabled= {followingInProgress.some(id=> id===u.id)} onClick ={()=>{\r\n                        follow(u.id)}\r\n                    }>Follow</button>}</div>\r\n                </span>\r\n                <span>\r\n                    <span> \r\n                       <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{'u.location.country'}</div>\r\n                         <div>{'u.location.city'}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n}\r\n\r\n\r\nexport default User;\r\n\r\n\r\n//StateData\r\n     /*    [\r\n        {id:'1', photoUrl:'https://qph.fs.quoracdn.net/main-qimg-d171a30624492d6041d5b23548136440', followed:true, fullName: 'Alena', status:\"Hi, how are you?\", location:{country: 'India', city:'New-Delhi'}},\r\n        {id:'2', photoUrl:'https://qph.fs.quoracdn.net/main-qimg-d171a30624492d6041d5b23548136440', followed:false,fullName: 'Ansar', status:\"Hi\", location:{country: 'Kazakhstan', city:'Almaty'}},\r\n        {id:'3', photoUrl:'https://qph.fs.quoracdn.net/main-qimg-d171a30624492d6041d5b23548136440',followed:true, fullName: 'Boris', status:\"Strong\", location:{country: 'Ukraine', city:'Kiev'}}\r\n])}; */\r\n\r\n//   \r\n\r\n\r\n//Dispatch\r\n\r\n /*  props.toggleFollowingInProgress(true, u.id);\r\n                        usersAPI.deleteUnfollow(u.id).then(data =>{\r\n                        if (data.resultCode == 0) {\r\n                            props.unfollow(u.id);\r\n                        }  \r\n                             props.toggleFollowingInProgress(false, u.id)\r\n                    }); \r\n                        props.unfollow(u.id)} */\r\n\r\n /* props.toggleFollowingInProgress(true, u.id);\r\n                        usersAPI.postFollow(u.id).then(data =>{\r\n                        if (data.resultCode == 0) {\r\n                            props.follow(u.id); \r\n                        }    \r\n                            props.toggleFollowingInProgress(false, u.id)\r\n                    }); */\r\n                        //props.follow(u.id)}","import React, { useState } from 'react'\r\nimport classes from './Users.module.css'\r\nimport User from './User'\r\nimport cn from 'classnames'\r\n//import userPhoto from '../../../src/Assets/Photo/userPhoto.png'\r\n//import { NavLink } from 'react-router-dom'\r\n\r\nlet Users = (props) => {\r\n\r\n\r\n    let pagesCount = Math.ceil((props.totalItemsCount) / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionSize = 10;\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (<div className={classes.paginator}>\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}> PREV </button>\r\n        }\r\n       \r\n            { pages  \r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span className={ cn({[classes.selectedPage]:props.currentPage === p},classes.pageNumber ) } onClick={(e) => { props.onPageChange(p) } }>{p}</span>\r\n                   // props.currentPage === p && classes.selectedPage, classes.pageNumber  } onClick={(e) => { props.onPageChange(p) } }>{p}</span>\r\n               //props.currentPage === p && classes.pageNumber\r\n               //classes.pageNumber\r\n                })\r\n            }\r\n      \r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}> NEXT </button>\r\n        }\r\n        <div className={classes.userBlock}>\r\n        {props.users.map(u => <User key={u.id} user={u} followingInProgress={props.followingInProgress} unfollow={props.unfollow} follow={props.follow} />)}\r\n        </div>\r\n\r\n\r\n    </div>)\r\n};\r\n\r\n\r\n/* <span>\r\n            \r\n                    <NavLink to = {'/Profile/' + u.id}><img src={ u.photos.small != null ? u.photos.small : userPhoto } alt='small pic' style={classes.img}/></NavLink>\r\n                    <div>{u.followed \r\n                    ? <button disabled= {props.followingInProgress.some(id=> id===u.id)} onClick ={()=>{\r\n                        props.unfollow(u.id)}\r\n                    }>Unfollow</button> \r\n\r\n                    : <button disabled= {props.followingInProgress.some(id=> id===u.id)} onClick ={()=>{\r\n                        props.follow(u.id)}\r\n                    }>Follow</button>}</div>\r\n                </span>\r\n                \r\n                <span>\r\n                    <span>\r\n                        \r\n                       <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{'u.location.country'}</div>\r\n                         <div>{'u.location.city'}</div>\r\n                    </span>\r\n                </span> */\r\n\r\n\r\n\r\n\r\nexport default Users;\r\n\r\n\r\n//StateData\r\n/*    [\r\n   {id:'1', photoUrl:'https://qph.fs.quoracdn.net/main-qimg-d171a30624492d6041d5b23548136440', followed:true, fullName: 'Alena', status:\"Hi, how are you?\", location:{country: 'India', city:'New-Delhi'}},\r\n   {id:'2', photoUrl:'https://qph.fs.quoracdn.net/main-qimg-d171a30624492d6041d5b23548136440', followed:false,fullName: 'Ansar', status:\"Hi\", location:{country: 'Kazakhstan', city:'Almaty'}},\r\n   {id:'3', photoUrl:'https://qph.fs.quoracdn.net/main-qimg-d171a30624492d6041d5b23548136440',followed:true, fullName: 'Boris', status:\"Strong\", location:{country: 'Ukraine', city:'Kiev'}}\r\n])}; */\r\n\r\n//   \r\n\r\n\r\n//Dispatch\r\n\r\n/*  props.toggleFollowingInProgress(true, u.id);\r\n                       usersAPI.deleteUnfollow(u.id).then(data =>{\r\n                       if (data.resultCode == 0) {\r\n                           props.unfollow(u.id);\r\n                       }\r\n                            props.toggleFollowingInProgress(false, u.id)\r\n                   });\r\n                       props.unfollow(u.id)} */\r\n\r\n/* props.toggleFollowingInProgress(true, u.id);\r\n                       usersAPI.postFollow(u.id).then(data =>{\r\n                       if (data.resultCode == 0) {\r\n                           props.follow(u.id);\r\n                       }\r\n                           props.toggleFollowingInProgress(false, u.id)\r\n                   }); */\r\n                        //props.follow(u.id)}","export const getUsers =(state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize =(state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount =(state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage =(state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching =(state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress =(state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { setUsers, setCurrentPage, setUsersTotalCount, toggleIsFetching, toggleFollowingInProgress, requestUsers, currentPageChanger, follow, unfollow} from '../../redux/Reducers/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport  {withAuthRedirect} from '../HOC/withAuthRedirect';\r\nimport {getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress} from '../../redux/Selectors/users-selectors'\r\n\r\n\r\nclass UsersContainer extends React.Component  {\r\n    \r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n    onPageChange =(pageNumber) => {\r\n        this.props.currentPageChanger(pageNumber,this.props.pageSize)\r\n    }\r\n    \r\n    render() {      \r\n        return  <>\r\n         <div>{this.props.isFetching ? <Preloader /> : null}</div> \r\n             <Users totalItemsCount ={this.props.totalItemsCount}\r\n                        pageSize = {this.props.pageSize}\r\n                        currentPage = {this.props.currentPage}\r\n                        onPageChange = {this.onPageChange}\r\n                        users = {this.props.users}\r\n                        followingInProgress = {this.props.followingInProgress} \r\n                        follow ={this.props.follow}\r\n                        unfollow ={this.props.unfollow}\r\n        />\r\n        </>\r\n    };\r\n    }\r\n\r\nlet mapStateToProps = (state)=> {\r\n    return {\r\n            users:getUsers(state),\r\n            pageSize: getPageSize(state),\r\n            totalItemsCount: getTotalUsersCount(state),\r\n            currentPage: getCurrentPage(state),\r\n            isFetching: getIsFetching(state),\r\n            followingInProgress:getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\n\r\nexport default compose (withAuthRedirect, connect(mapStateToProps, { setUsers, setUsersTotalCount,\r\n    setCurrentPage, toggleIsFetching, toggleFollowingInProgress, requestUsers, follow, unfollow, currentPageChanger })) (UsersContainer);\r\n\r\n\r\n\r\n/* Предыдущий вариант \r\n let mapStateToDispatch =(dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            return dispatch(followActionCreator(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            return dispatch(unfollowActionCreator(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            return dispatch(setUsersActionCreator(users))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            return dispatch(setCurrentPageActionCreator(pageNumber))\r\n        },\r\n        setUsersTotalCount: (totalCount) => {\r\n            return dispatch(setUsersTotalCountActionCreator(totalCount))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            return dispatch(toggleIsFetchingActionCreator(isFetching))\r\n        }\r\n    }\r\n} */\r\n\r\n//Dispatch\r\n\r\n/* this.props.toggleIsFetching(true)\r\n             usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data =>{\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(data.items);  \r\n                this.props.setUsersTotalCount(data.totalCount);\r\n            }); */\r\n\r\n/* this.props.toggleIsFetching(true)\r\n        this.props.setCurrentPage(pageNumber)\r\n            usersAPI.getUsers(pageNumber, this.props.pageSize).then(data =>{\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(data.items);    \r\n        }); */\r\n\r\n        \r\n//Before compose () () \r\n\r\n/* \r\nexport default connect(mapStateToProps, { setUsers, setUsersTotalCount,\r\n    setCurrentPage, toggleIsFetching, toggleFollowingInProgress, getUsers, follow, unfollow, currentPageChanger }) (UsersContainer);  */"],"sourceRoot":""}