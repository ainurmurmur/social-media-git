{"version":3,"sources":["Components/HOC/withAuthRedirect.jsx","Components/Users/Users.module.css","Components/Users/User.jsx","Components/Users/Users.jsx","redux/Selectors/users-selectors.js","Components/Users/UsersContainer.jsx"],"names":["mapStateToPropsRedirected","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","module","exports","User","followingInProgress","user","unfollow","follow","u","className","classes","userSpan1","id","src","photos","small","userPhoto","alt","style","img","followed","btnPage","disabled","some","onClick","userSpan2","userP","name","status","Users","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","userWrapper","paginator","filter","p","map","cn","selectedPage","currentPage","pageNumber","e","onPageChange","userBlock","users","key","getUsers","usersPage","getPageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","currentPageChanger","this","requestUsers","Preloader","React","compose","setUsers","setUsersTotalCount","setCurrentPage","toggleIsFetching","toggleFollowingInProgress"],"mappings":"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","file":"static/js/4.0b7d2c24.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n\r\nlet mapStateToPropsRedirected = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let authWrapperContainer = (props) => {\r\n        if (!props.isAuth) return <Redirect to = '/login' />\r\n        return <Component {...props} />\r\n    }\r\n   \r\n\r\nlet ConnectedAuthRedirectComponent = connect (mapStateToPropsRedirected) (authWrapperContainer);\r\n\r\nreturn ConnectedAuthRedirectComponent\r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userWrapper\":\"Users_userWrapper__1Bt67\",\"userSpan\":\"Users_userSpan__2JKHQ\",\"user\":\"Users_user__X2zUG\",\"userSpan1\":\"Users_userSpan1__5jkIr\",\"userSpan2\":\"Users_userSpan2__2GlI4\",\"paginator\":\"Users_paginator__1KcHa\",\"pageNumber\":\"Users_pageNumber__1jrYh\",\"selectedPage\":\"Users_selectedPage__2I0HA\",\"userBlock\":\"Users_userBlock__sBJrI\",\"btnPage\":\"Users_btnPage__2Uj-Q\",\"userP\":\"Users_userP__2olmH\"};","import React from 'react'\r\nimport classes from './Users.module.css'\r\nimport userPhoto from '../../Assets/Photo/userava.png'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nlet User =({followingInProgress, user, unfollow, follow }) =>{\r\n\r\n    let u = user;\r\n\r\n            return (<div className={classes.user}>\r\n\r\n                <span className={classes.userSpan1}>\r\n                    <NavLink to = {'/Profile/' + u.id}><img src={ u.photos.small != null ? u.photos.small : userPhoto } alt='small pic' style={classes.img}/></NavLink>\r\n                    <div>{u.followed \r\n                    ? <button className={classes.btnPage} disabled= {followingInProgress.some(id=> id===u.id)} onClick ={()=>{\r\n                        unfollow(u.id)}\r\n                    }>Unfollow</button> \r\n                    : <button className={classes.btnPage} disabled= {followingInProgress.some(id=> id===u.id)} onClick ={()=>{\r\n                        follow(u.id)}\r\n                    }>Follow</button>}</div>\r\n                </span>\r\n                <span className={classes.userSpan2}>\r\n                    <span> \r\n                       <p className={classes.userP}>{u.name}</p>\r\n                       <br></br>\r\n                        <p>{u.status}</p>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n}\r\n\r\n\r\nexport default User;\r\n\r\n\r\n//StateData\r\n     /*    [\r\n        {id:'1', photoUrl:'https://qph.fs.quoracdn.net/main-qimg-d171a30624492d6041d5b23548136440', followed:true, fullName: 'Alena', status:\"Hi, how are you?\", location:{country: 'India', city:'New-Delhi'}},\r\n        {id:'2', photoUrl:'https://qph.fs.quoracdn.net/main-qimg-d171a30624492d6041d5b23548136440', followed:false,fullName: 'Ansar', status:\"Hi\", location:{country: 'Kazakhstan', city:'Almaty'}},\r\n        {id:'3', photoUrl:'https://qph.fs.quoracdn.net/main-qimg-d171a30624492d6041d5b23548136440',followed:true, fullName: 'Boris', status:\"Strong\", location:{country: 'Ukraine', city:'Kiev'}}\r\n])}; */\r\n\r\n//   \r\n\r\n\r\n//Dispatch\r\n\r\n /*  props.toggleFollowingInProgress(true, u.id);\r\n                        usersAPI.deleteUnfollow(u.id).then(data =>{\r\n                        if (data.resultCode == 0) {\r\n                            props.unfollow(u.id);\r\n                        }  \r\n                             props.toggleFollowingInProgress(false, u.id)\r\n                    }); \r\n                        props.unfollow(u.id)} */\r\n\r\n /* props.toggleFollowingInProgress(true, u.id);\r\n                        usersAPI.postFollow(u.id).then(data =>{\r\n                        if (data.resultCode == 0) {\r\n                            props.follow(u.id); \r\n                        }    \r\n                            props.toggleFollowingInProgress(false, u.id)\r\n                    }); */\r\n                        //props.follow(u.id)}","import React, { useState } from 'react'\r\nimport style from './Users.module.css'\r\nimport User from './User'\r\nimport cn from 'classnames'\r\n\r\nlet Users = (props) => {\r\n\r\n\r\n    let pagesCount = Math.ceil((props.totalItemsCount) / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionSize = 10;\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (<div className={style.userWrapper}>\r\n        <div className={style.paginator}>\r\n        {portionNumber > 1 &&\r\n            <button className={style.btnPage} onClick={() => { setPortionNumber(portionNumber - 1) }}> PREV </button>\r\n        }\r\n            \r\n            { pages  \r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span className={ cn({[style.selectedPage]:props.currentPage === p},style.pageNumber ) } \r\n                            onClick={(e) => { props.onPageChange(p) } }>{p}</span>\r\n                })\r\n            }\r\n      \r\n        {portionCount > portionNumber &&\r\n            <button className={style.btnPage} onClick={() => { setPortionNumber(portionNumber + 1) }}> NEXT </button>\r\n        }\r\n        </div>\r\n        <div className={style.userBlock}>\r\n        {props.users.map(u => <User key={u.id} user={u} followingInProgress={props.followingInProgress} unfollow={props.unfollow} follow={props.follow} />)}\r\n        </div>\r\n\r\n        </div>\r\n   )\r\n};\r\n\r\n\r\n/* <span>\r\n            \r\n                    <NavLink to = {'/Profile/' + u.id}><img src={ u.photos.small != null ? u.photos.small : userPhoto } alt='small pic' style={classes.img}/></NavLink>\r\n                    <div>{u.followed \r\n                    ? <button disabled= {props.followingInProgress.some(id=> id===u.id)} onClick ={()=>{\r\n                        props.unfollow(u.id)}\r\n                    }>Unfollow</button> \r\n\r\n                    : <button disabled= {props.followingInProgress.some(id=> id===u.id)} onClick ={()=>{\r\n                        props.follow(u.id)}\r\n                    }>Follow</button>}</div>\r\n                </span>\r\n                \r\n                <span>\r\n                    <span>\r\n                        \r\n                       <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{'u.location.country'}</div>\r\n                         <div>{'u.location.city'}</div>\r\n                    </span>\r\n                </span> */\r\n           // props.currentPage === p && classes.selectedPage, classes.pageNumber  } onClick={(e) => { props.onPageChange(p) } }>{p}</span>\r\n               //props.currentPage === p && classes.pageNumber\r\n               //classes.pageNumber\r\n\r\n\r\n\r\nexport default Users;\r\n\r\n\r\n//StateData\r\n/*    [\r\n   {id:'1', photoUrl:'https://qph.fs.quoracdn.net/main-qimg-d171a30624492d6041d5b23548136440', followed:true, fullName: 'Alena', status:\"Hi, how are you?\", location:{country: 'India', city:'New-Delhi'}},\r\n   {id:'2', photoUrl:'https://qph.fs.quoracdn.net/main-qimg-d171a30624492d6041d5b23548136440', followed:false,fullName: 'Ansar', status:\"Hi\", location:{country: 'Kazakhstan', city:'Almaty'}},\r\n   {id:'3', photoUrl:'https://qph.fs.quoracdn.net/main-qimg-d171a30624492d6041d5b23548136440',followed:true, fullName: 'Boris', status:\"Strong\", location:{country: 'Ukraine', city:'Kiev'}}\r\n])}; */\r\n\r\n//   \r\n\r\n\r\n//Dispatch\r\n\r\n/*  props.toggleFollowingInProgress(true, u.id);\r\n                       usersAPI.deleteUnfollow(u.id).then(data =>{\r\n                       if (data.resultCode == 0) {\r\n                           props.unfollow(u.id);\r\n                       }\r\n                            props.toggleFollowingInProgress(false, u.id)\r\n                   });\r\n                       props.unfollow(u.id)} */\r\n\r\n/* props.toggleFollowingInProgress(true, u.id);\r\n                       usersAPI.postFollow(u.id).then(data =>{\r\n                       if (data.resultCode == 0) {\r\n                           props.follow(u.id);\r\n                       }\r\n                           props.toggleFollowingInProgress(false, u.id)\r\n                   }); */\r\n                        //props.follow(u.id)}","export const getUsers =(state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize =(state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount =(state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage =(state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching =(state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress =(state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { setUsers, setCurrentPage, setUsersTotalCount, toggleIsFetching, toggleFollowingInProgress, requestUsers, currentPageChanger, follow, unfollow} from '../../redux/Reducers/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport  {withAuthRedirect} from '../HOC/withAuthRedirect';\r\nimport {getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress} from '../../redux/Selectors/users-selectors'\r\n\r\n\r\nclass UsersContainer extends React.Component  {\r\n    \r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n    onPageChange =(pageNumber) => {\r\n        this.props.currentPageChanger(pageNumber,this.props.pageSize)\r\n    }\r\n    \r\n    render() {      \r\n        return  <>\r\n         <div>{this.props.isFetching ? <Preloader /> : null}</div> \r\n             <Users totalItemsCount ={this.props.totalItemsCount}\r\n                        pageSize = {this.props.pageSize}\r\n                        currentPage = {this.props.currentPage}\r\n                        onPageChange = {this.onPageChange}\r\n                        users = {this.props.users}\r\n                        followingInProgress = {this.props.followingInProgress} \r\n                        follow ={this.props.follow}\r\n                        unfollow ={this.props.unfollow}\r\n        />\r\n        </>\r\n    };\r\n    }\r\n\r\nlet mapStateToProps = (state)=> {\r\n    return {\r\n            users:getUsers(state),\r\n            pageSize: getPageSize(state),\r\n            totalItemsCount: getTotalUsersCount(state),\r\n            currentPage: getCurrentPage(state),\r\n            isFetching: getIsFetching(state),\r\n            followingInProgress:getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\n\r\nexport default compose (withAuthRedirect, connect(mapStateToProps, { setUsers, setUsersTotalCount,\r\n    setCurrentPage, toggleIsFetching, toggleFollowingInProgress, requestUsers, follow, unfollow, currentPageChanger })) (UsersContainer);\r\n\r\n\r\n\r\n/* Предыдущий вариант \r\n let mapStateToDispatch =(dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            return dispatch(followActionCreator(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            return dispatch(unfollowActionCreator(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            return dispatch(setUsersActionCreator(users))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            return dispatch(setCurrentPageActionCreator(pageNumber))\r\n        },\r\n        setUsersTotalCount: (totalCount) => {\r\n            return dispatch(setUsersTotalCountActionCreator(totalCount))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            return dispatch(toggleIsFetchingActionCreator(isFetching))\r\n        }\r\n    }\r\n} */\r\n\r\n//Dispatch\r\n\r\n/* this.props.toggleIsFetching(true)\r\n             usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data =>{\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(data.items);  \r\n                this.props.setUsersTotalCount(data.totalCount);\r\n            }); */\r\n\r\n/* this.props.toggleIsFetching(true)\r\n        this.props.setCurrentPage(pageNumber)\r\n            usersAPI.getUsers(pageNumber, this.props.pageSize).then(data =>{\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(data.items);    \r\n        }); */\r\n\r\n        \r\n//Before compose () () \r\n\r\n/* \r\nexport default connect(mapStateToProps, { setUsers, setUsersTotalCount,\r\n    setCurrentPage, toggleIsFetching, toggleFollowingInProgress, getUsers, follow, unfollow, currentPageChanger }) (UsersContainer);  */"],"sourceRoot":""}