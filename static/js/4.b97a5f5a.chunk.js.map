{"version":3,"sources":["Components/HOC/withAuthRedirect.jsx","Components/Users/Users.module.css","Components/Users/User.jsx","Components/Users/Users.jsx","redux/Selectors/users-selectors.js","Components/Users/UsersContainer.jsx"],"names":["mapStateToPropsRedirected","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","module","exports","User","followingInProgress","user","unfollow","follow","u","className","classes","userSpan1","id","src","photos","small","userPhoto","alt","style","img","followed","type","margin","disabled","some","onClick","Typography","variant","userSpan2","userP","name","status","Users","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","userWrapper","paginator","btnPage","filter","p","map","cn","selectedPage","currentPage","pageNumber","e","onPageChange","key","userBlock","users","getUsers","usersPage","getPageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","currentPageChanger","this","requestUsers","Preloader","React","compose","setUsers","setUsersTotalCount","setCurrentPage","toggleIsFetching","toggleFollowingInProgress"],"mappings":"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","file":"static/js/4.b97a5f5a.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n\r\nlet mapStateToPropsRedirected = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let authWrapperContainer = (props) => {\r\n        if (!props.isAuth) return <Redirect to = '/login' />\r\n        return <Component {...props} />\r\n    }\r\n   \r\n\r\nlet ConnectedAuthRedirectComponent = connect (mapStateToPropsRedirected) (authWrapperContainer);\r\n\r\nreturn ConnectedAuthRedirectComponent\r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userWrapper\":\"Users_userWrapper__3Zal0\",\"userSpan\":\"Users_userSpan__1oyjS\",\"user\":\"Users_user__16Bll\",\"userSpan1\":\"Users_userSpan1__3hff0\",\"userSpan2\":\"Users_userSpan2__XgMK8\",\"paginator\":\"Users_paginator__3eCJ3\",\"pageNumber\":\"Users_pageNumber__mMJ6S\",\"selectedPage\":\"Users_selectedPage__2sqRb\",\"userBlock\":\"Users_userBlock__36zCU\",\"btnPage\":\"Users_btnPage__29sHE\",\"userP\":\"Users_userP__bcRqU\"};","import React from 'react'\r\nimport classes from './Users.module.css'\r\nimport userPhoto from '../../Assets/Photo/avatar.png'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {ButtonStyled} from '../Common/UI/StylesUI'\r\nimport { Typography } from '@material-ui/core'\r\nimport 'fontsource-roboto';\r\n\r\nlet User =({followingInProgress, user, unfollow, follow }) =>{\r\n\r\n    let u = user;\r\n\r\n    return (<div className={classes.user} >\r\n\r\n                <span className={classes.userSpan1} >\r\n                    <NavLink to = {'/Profile/' + u.id}><img src={ u.photos.small != null ? u.photos.small : userPhoto } alt='small pic' style={classes.img}/></NavLink>\r\n                    <div>{u.followed \r\n                    ?\r\n                    <ButtonStyled type='submit' style={{ margin: \"10px\"}} disabled= {followingInProgress.some(id=> id===u.id)} onClick ={()=>{\r\n                        unfollow(u.id)}}><Typography variant='button'>Unfollow</Typography></ButtonStyled>\r\n                   \r\n                    :\r\n                    <ButtonStyled type='submit'  style={{ margin: \"10px\"}} disabled= {followingInProgress.some(id=> id===u.id)} onClick ={()=>{\r\n                        follow(u.id)}}><Typography variant='button'>Follow</Typography></ButtonStyled> \r\n                   \r\n                   }\r\n                    </div>\r\n                </span>\r\n                <span className={classes.userSpan2}>\r\n                    <span> \r\n                       <p className={classes.userP}>{u.name}</p>\r\n                       <br></br>\r\n                        <p>{u.status}</p>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n}\r\n\r\n\r\nexport default User;\r\n\r\n\r\n // <button className={classes.btnPage} disabled= {followingInProgress.some(id=> id===u.id)} onClick ={()=>{\r\n                    //     follow(u.id)}\r\n                    // }>Follow</button>\r\n // <button className={classes.btnPage} disabled= {followingInProgress.some(id=> id===u.id)} onClick ={()=>{\r\n                    //     unfollow(u.id)}\r\n                    // }>Unfollow</button> \r\n//StateData\r\n     /*    [\r\n        {id:'1', photoUrl:'https://qph.fs.quoracdn.net/main-qimg-d171a30624492d6041d5b23548136440', followed:true, fullName: 'Alena', status:\"Hi, how are you?\", location:{country: 'India', city:'New-Delhi'}},\r\n        {id:'2', photoUrl:'https://qph.fs.quoracdn.net/main-qimg-d171a30624492d6041d5b23548136440', followed:false,fullName: 'Ansar', status:\"Hi\", location:{country: 'Kazakhstan', city:'Almaty'}},\r\n        {id:'3', photoUrl:'https://qph.fs.quoracdn.net/main-qimg-d171a30624492d6041d5b23548136440',followed:true, fullName: 'Boris', status:\"Strong\", location:{country: 'Ukraine', city:'Kiev'}}\r\n])}; */\r\n\r\n//   \r\n\r\n\r\n//Dispatch\r\n\r\n /*  props.toggleFollowingInProgress(true, u.id);\r\n                        usersAPI.deleteUnfollow(u.id).then(data =>{\r\n                        if (data.resultCode == 0) {\r\n                            props.unfollow(u.id);\r\n                        }  \r\n                             props.toggleFollowingInProgress(false, u.id)\r\n                    }); \r\n                        props.unfollow(u.id)} */\r\n\r\n /* props.toggleFollowingInProgress(true, u.id);\r\n                        usersAPI.postFollow(u.id).then(data =>{\r\n                        if (data.resultCode == 0) {\r\n                            props.follow(u.id); \r\n                        }    \r\n                            props.toggleFollowingInProgress(false, u.id)\r\n                    }); */\r\n                        //props.follow(u.id)}","import React, { useState } from 'react'\r\nimport style from './Users.module.css'\r\nimport User from './User'\r\nimport cn from 'classnames'\r\n\r\nlet Users = (props) => {\r\n\r\n\r\n    let pagesCount = Math.ceil((props.totalItemsCount) / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionSize = 10;\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (<div className={style.userWrapper}>\r\n        <div className={style.paginator}>\r\n        {portionNumber > 1 &&\r\n            <button className={style.btnPage} onClick={() => { setPortionNumber(portionNumber - 1) }}> PREV </button>\r\n        }\r\n            \r\n            { pages  \r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span className={ cn({[style.selectedPage]:props.currentPage === p},style.pageNumber ) } \r\n                            onClick={(e) => { props.onPageChange(p) } } key={p}>{p}</span>\r\n                })\r\n            }\r\n      \r\n        {portionCount > portionNumber &&\r\n            <button className={style.btnPage} onClick={() => { setPortionNumber(portionNumber + 1) }}> NEXT </button>\r\n        }\r\n        </div>\r\n        <div className={style.userBlock}>\r\n        {props.users.map(u => <User key={u.id} user={u} followingInProgress={props.followingInProgress} unfollow={props.unfollow} follow={props.follow} />)}\r\n        </div>\r\n\r\n        </div>\r\n   )\r\n};\r\n\r\n\r\n/* <span>\r\n            \r\n                    <NavLink to = {'/Profile/' + u.id}><img src={ u.photos.small != null ? u.photos.small : userPhoto } alt='small pic' style={classes.img}/></NavLink>\r\n                    <div>{u.followed \r\n                    ? <button disabled= {props.followingInProgress.some(id=> id===u.id)} onClick ={()=>{\r\n                        props.unfollow(u.id)}\r\n                    }>Unfollow</button> \r\n\r\n                    : <button disabled= {props.followingInProgress.some(id=> id===u.id)} onClick ={()=>{\r\n                        props.follow(u.id)}\r\n                    }>Follow</button>}</div>\r\n                </span>\r\n                \r\n                <span>\r\n                    <span>\r\n                        \r\n                       <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{'u.location.country'}</div>\r\n                         <div>{'u.location.city'}</div>\r\n                    </span>\r\n                </span> */\r\n           // props.currentPage === p && classes.selectedPage, classes.pageNumber  } onClick={(e) => { props.onPageChange(p) } }>{p}</span>\r\n               //props.currentPage === p && classes.pageNumber\r\n               //classes.pageNumber\r\n\r\n\r\n\r\nexport default Users;\r\n\r\n\r\n//StateData\r\n/*    [\r\n   {id:'1', photoUrl:'https://qph.fs.quoracdn.net/main-qimg-d171a30624492d6041d5b23548136440', followed:true, fullName: 'Alena', status:\"Hi, how are you?\", location:{country: 'India', city:'New-Delhi'}},\r\n   {id:'2', photoUrl:'https://qph.fs.quoracdn.net/main-qimg-d171a30624492d6041d5b23548136440', followed:false,fullName: 'Ansar', status:\"Hi\", location:{country: 'Kazakhstan', city:'Almaty'}},\r\n   {id:'3', photoUrl:'https://qph.fs.quoracdn.net/main-qimg-d171a30624492d6041d5b23548136440',followed:true, fullName: 'Boris', status:\"Strong\", location:{country: 'Ukraine', city:'Kiev'}}\r\n])}; */\r\n\r\n//   \r\n\r\n\r\n//Dispatch\r\n\r\n/*  props.toggleFollowingInProgress(true, u.id);\r\n                       usersAPI.deleteUnfollow(u.id).then(data =>{\r\n                       if (data.resultCode == 0) {\r\n                           props.unfollow(u.id);\r\n                       }\r\n                            props.toggleFollowingInProgress(false, u.id)\r\n                   });\r\n                       props.unfollow(u.id)} */\r\n\r\n/* props.toggleFollowingInProgress(true, u.id);\r\n                       usersAPI.postFollow(u.id).then(data =>{\r\n                       if (data.resultCode == 0) {\r\n                           props.follow(u.id);\r\n                       }\r\n                           props.toggleFollowingInProgress(false, u.id)\r\n                   }); */\r\n                        //props.follow(u.id)}","export const getUsers =(state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize =(state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount =(state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage =(state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching =(state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress =(state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { setUsers, setCurrentPage, setUsersTotalCount, toggleIsFetching, toggleFollowingInProgress, requestUsers, currentPageChanger, follow, unfollow} from '../../redux/Reducers/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport  {withAuthRedirect} from '../HOC/withAuthRedirect';\r\nimport {getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress} from '../../redux/Selectors/users-selectors'\r\n\r\n\r\nclass UsersContainer extends React.Component  {\r\n    \r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n    onPageChange =(pageNumber) => {\r\n        this.props.currentPageChanger(pageNumber,this.props.pageSize)\r\n    }\r\n    \r\n    render() {      \r\n        return  <>\r\n         <div>{this.props.isFetching ? <Preloader /> : null}</div> \r\n             <Users totalItemsCount ={this.props.totalItemsCount}\r\n                        pageSize = {this.props.pageSize}\r\n                        currentPage = {this.props.currentPage}\r\n                        onPageChange = {this.onPageChange}\r\n                        users = {this.props.users}\r\n                        followingInProgress = {this.props.followingInProgress} \r\n                        follow ={this.props.follow}\r\n                        unfollow ={this.props.unfollow}\r\n        />\r\n        </>\r\n    };\r\n    }\r\n\r\nlet mapStateToProps = (state)=> {\r\n    return {\r\n            users:getUsers(state),\r\n            pageSize: getPageSize(state),\r\n            totalItemsCount: getTotalUsersCount(state),\r\n            currentPage: getCurrentPage(state),\r\n            isFetching: getIsFetching(state),\r\n            followingInProgress:getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\n\r\nexport default compose (withAuthRedirect, connect(mapStateToProps, { setUsers, setUsersTotalCount,\r\n    setCurrentPage, toggleIsFetching, toggleFollowingInProgress, requestUsers, follow, unfollow, currentPageChanger })) (UsersContainer);\r\n\r\n\r\n\r\n/* Предыдущий вариант \r\n let mapStateToDispatch =(dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            return dispatch(followActionCreator(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            return dispatch(unfollowActionCreator(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            return dispatch(setUsersActionCreator(users))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            return dispatch(setCurrentPageActionCreator(pageNumber))\r\n        },\r\n        setUsersTotalCount: (totalCount) => {\r\n            return dispatch(setUsersTotalCountActionCreator(totalCount))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            return dispatch(toggleIsFetchingActionCreator(isFetching))\r\n        }\r\n    }\r\n} */\r\n\r\n//Dispatch\r\n\r\n/* this.props.toggleIsFetching(true)\r\n             usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data =>{\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(data.items);  \r\n                this.props.setUsersTotalCount(data.totalCount);\r\n            }); */\r\n\r\n/* this.props.toggleIsFetching(true)\r\n        this.props.setCurrentPage(pageNumber)\r\n            usersAPI.getUsers(pageNumber, this.props.pageSize).then(data =>{\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(data.items);    \r\n        }); */\r\n\r\n        \r\n//Before compose () () \r\n\r\n/* \r\nexport default connect(mapStateToProps, { setUsers, setUsersTotalCount,\r\n    setCurrentPage, toggleIsFetching, toggleFollowingInProgress, getUsers, follow, unfollow, currentPageChanger }) (UsersContainer);  */"],"sourceRoot":""}