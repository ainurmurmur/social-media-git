{"version":3,"sources":["Api/Api.js","redux/Reducers/dialogs-reducer.jsx","Utils/Object-Helpers.jsx","redux/Reducers/users-reducer.jsx","Components/Footer/Footer.module.css","Assets/Photo/preloader.svg","Components/Content/MyPost/Post/Post.module.css","Components/Header/logo.svg","Components/NavBar/NavBar.module.css","Components/Common/FormsControl/FormsControl.jsx","Components/NavBar/NavBar.jsx","Components/Footer/Footer.jsx","Components/NavBar/News/News.jsx","Components/NavBar/Music/Music.jsx","Components/NavBar/Settings/Settings.jsx","Components/Content/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Content/ProfileInfo/ProfileInfo.jsx","Components/Content/MyPost/Post/Post.jsx","Components/Content/MyPost/MyPost.jsx","redux/Reducers/profile-reducer.jsx","Components/Content/MyPost/MyPostContainer.jsx","Components/Content/Profile.jsx","Components/Content/ProfileContainer.jsx","Components/Header/Header.jsx","redux/Reducers/auth-reducer.js","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","redux/Reducers/app-reducer.js","redux/Reducers/sidebar-reducer.jsx","redux/redux-store.js","Components/Common/Lazy/withLazySuspense.jsx","App.js","index.js","Components/Common/Preloader/Preloader.jsx","Utils/Validators.jsx","Components/Common/FormsControl/FormsControl.module.css","Components/Header/Header.module.css","Components/Content/ProfileInfo/ProfileInfo.module.css","Assets/Photo/userPhoto.png"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsersApi","currentPage","pageSize","get","then","response","data","getUsersId","id","console","warn","profileAPI","deleteUnfollow","delete","postFollow","post","getStatus","userid","updateStatus","status","put","savePhoto","photo","formData","FormData","append","headersAPI","headerAuth","login","email","password","rememberMe","logout","initialState","dialogsData","name","messagesData","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","updateObjectArray","items","objPropName","itemId","newObjectProps","map","u","FOLLOW","users","totalUsersCount","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setUsers","setCurrentPage","setUsersTotalCount","count","toggleIsFetching","toggleFollowingInProgress","requestUsers","dispatch","a","totalCount","currentPageChanger","pageNumber","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","bind","unfollow","usersReducer","followed","filter","module","exports","FormControl","input","meta","props","child","hasError","touched","error","className","classes","formControl","children","Textarea","restProps","Input","createField","placeholder","component","validates","text","validate","NavBar","navBar","item","to","activeClassName","active","Footer","footer","News","Music","Settings","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onBlur","autoFocus","onChange","e","currentTarget","value","ProfileInfo","profile","Preloader","descriptionBlock","src","photos","large","userPhoto","alt","avatar","isOwner","target","files","length","fullName","lookingForAJob","lookingForAJobDescription","contacts","github","vk","instagram","facebook","twitter","website","youtube","mainLink","Post","ava","likesCounter","MaxLength10","maxLengthCreator","MyPostForm","reduxForm","form","onSubmit","handleSubmit","Field","required","MyPost","postsElement","posts","p","likesCouter","values","addPost","newPostText","ADD_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","postsData","setProfileStatus","profileReducer","newPost","MyPostContainer","connect","profilePage","addPostActionCreator","Profile","ProfileContainer","this","match","params","authorizedUserId","history","push","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","withRouter","auth","isAuth","file","Header","header","logo","loginBlock","onClick","setAuthUserData","payload","authReducer","HeaderContainer","LoginReduxForm","formControlError","stopSubmit","_error","messages","initialized","appReducer","sidebarReducer","reducers","combineReducers","dialogPage","sidebar","usersPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withLazy","Suspense","fallback","UsersContainer","lazy","DialogsContainer","App","initializedApp","path","render","AppWithRouter","promise","Promise","all","AppMain","ReactDOM","document","getElementById","preLoader","maxLength"],"mappings":"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","file":"static/js/main.98016c48.chunk.js","sourcesContent":["import * as axios from 'axios' \r\n\r\nconst instance = axios.create ({\r\n    withCredentials:true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers:{\"API-KEY\": \"bb24df90-925e-4eb5-a07f-24f5b0731fe5\"}\r\n});\r\n\r\nexport const  usersAPI = {\r\n    getUsersApi: (currentPage=1, pageSize=5) => {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response =>{\r\n                return response.data\r\n         })\r\n        },\r\n    getUsersId: (id) => {\r\n       console.warn('Absolute method. Please profileAPI object');\r\n       return profileAPI.getUsersId(id)\r\n    },\r\n\r\n    deleteUnfollow: (id) => {\r\n        return instance.delete (`follow/`+id)\r\n        .then(response => {\r\n            return response.data    \r\n         })\r\n    },\r\n    postFollow: (id) => {\r\n        return instance.post (`follow/`+id)\r\n        .then(response => {\r\n            return response.data  \r\n         })\r\n        }\r\n};\r\n\r\nexport const profileAPI = {\r\n    \r\n    getUsersId: (id) => {\r\n  \r\n        return  instance.get(`profile/`+ id)\r\n             .then(response =>{\r\n                // debugger\r\n                return  response.data;\r\n    });\r\n     },\r\n\r\n     getStatus: (userid) => {\r\n         return instance.get(`profile/status/`+ userid)\r\n\r\n    },\r\n    updateStatus: (status) => {\r\n        return instance.put(`profile/status`, {status:status})\r\n   },\r\n   savePhoto: (photo) => {\r\n       const formData = new FormData();\r\n       formData.append('image', photo)\r\n       return instance.put(`profile/photo`, formData, {\r\n           headers: {\r\n               'Content-Type': 'multipart/form-data'\r\n           }\r\n       })\r\n   }\r\n};\r\n\r\n\r\nexport const  headersAPI = {\r\n    headerAuth: () => {\r\n        return instance.get(`auth/me`)\r\n            .then(response =>{\r\n                return response.data\r\n         })\r\n        },\r\n    login: (email, password, rememberMe=false) => {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n            .then(response =>{\r\n                return response.data\r\n         })\r\n        },\r\n    logout: () => {\r\n            return instance.delete(`auth/login`)\r\n                .then(response =>{\r\n                    return response.data\r\n             })\r\n            },\r\n    \r\n}\r\n\r\n","\r\nconst SEND_MESSAGE= 'dialogs/SEND-MESSAGE';\r\n\r\n let initialState= {\r\n     \r\n    dialogsData: [\r\n      {name:'Vika', id:'1'},\r\n      {name:'Alla', id:'2'},\r\n      {name:'Aidana', id:'3'},\r\n      {name:'Tanya', id:'4'},\r\n      {name:'Anzhela', id:'5'}\r\n],\r\n    messagesData:  [\r\n      {message:'How are you?', id:'1'},\r\n      {message:'Hi', id:'2'},\r\n      {message:'Hi', id:'3'},\r\n      {message:'Hi', id:'4'},\r\n      {message:'Hi', id:'5'}    \r\n  ],\r\n  \r\n}\r\n\r\nconst dialogsReducer = (state=initialState, action) => {\r\n   \r\n\r\n    switch(action.type) {\r\n        \r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n           return  {...state, messagesData: [...state.messagesData, {message:body, id:'6'}], };\r\n            \r\n        }\r\n        default: return state;\r\n    }\r\n    /* if (action.type === UPDATE_NEW_MESSAGE_BODY) {\r\n        state.newMessageBody = action.body;\r\n        \r\n  }\r\n  else if (action.type === SEND_MESSAGE){\r\n        let body = state.newMessageBody;\r\n        state.messagesData.push({message:body, id:'6'});\r\n        state.newMessageBody = '';\r\n        \r\n  } */\r\n  \r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody)=> ({type: SEND_MESSAGE, newMessageBody});\r\n\r\n\r\nexport default dialogsReducer;\r\n\r\n\r\n\r\n//Before redux-form \r\n\r\n//export const updateNewMessageBodyCreator = (body) => ({  type: UPDATE_NEW_MESSAGE_BODY, body: body});\r\n//const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\n//case UPDATE_NEW_MESSAGE_BODY:{\r\n//     return {...state, newMessageBody:action.body};\r\n       \r\n\r\n// }\r\n    \r\n\r\n","export const updateObjectArray =(items, objPropName, itemId, newObjectProps) => {\r\n\r\n    return items.map( u => {\r\n            if (u[objPropName] === itemId) {\r\n                return { ...u, ...newObjectProps }\r\n            }\r\n            return u;\r\n        }\r\n    )}\r\n","import { usersAPI } from '../../Api/Api'\r\nimport {updateObjectArray} from '../../Utils/Object-Helpers'\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'users/SET_USERS_TOTAL_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_IN_PROGRESS'\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n    \r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state, \r\n                users: updateObjectArray(state.users, 'id', action.userId, {followed: true})  \r\n            }\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state, \r\n                users: updateObjectArray(state.users, 'id', action.userId, {followed: false})\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state, \r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state, \r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return {\r\n                ...state, \r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state, \r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n//ActionCreators\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setUsersTotalCount = (totalUsersCount) => ({ type: SET_USERS_TOTAL_COUNT, count: totalUsersCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingInProgress = (followingInProgress, userId) => ({ type: TOGGLE_IS_FOLLOWING_IN_PROGRESS, followingInProgress, userId });\r\n\r\n//ThunkFunctions\r\n\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    let data = await usersAPI.getUsersApi(currentPage, pageSize)\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setUsersTotalCount(data.totalCount));\r\n};\r\nexport const currentPageChanger = (pageNumber, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(pageNumber))\r\n    let data = await usersAPI.getUsersApi(pageNumber, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(data.items));\r\n};\r\n\r\nexport const followUnfollowFlow =  async (userid, dispatch, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingInProgress(true, userid));\r\n    let data = await apiMethod(userid)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userid));\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, userid))\r\n    dispatch(actionCreator(userid))\r\n}\r\n\r\nexport const follow = (userid) => async (dispatch) => {\r\n    followUnfollowFlow(userid, dispatch, usersAPI.postFollow.bind(usersAPI), followSuccess)\r\n}\r\n\r\n\r\nexport const unfollow = (userid) => async (dispatch) => {\r\n    followUnfollowFlow(userid, dispatch, usersAPI.deleteUnfollow.bind(usersAPI), unfollowSuccess)\r\n}\r\n\r\n\r\n\r\nexport default usersReducer;\r\n\r\n// //\r\n// export const unfollow = (userid) => async (dispatch) => {\r\n//     dispatch(toggleFollowingInProgress(true, userid));\r\n//     let data = await usersAPI.deleteUnfollow(userid)\r\n//     if (data.resultCode === 0) {\r\n//         dispatch(unfollowSuccess(userid));\r\n//     }\r\n//     dispatch(toggleFollowingInProgress(false, userid))\r\n\r\n//     dispatch(unfollowSuccess(userid))\r\n// }\r\n\r\n\r\n// state.users.map(\r\n//     u => {\r\n//         if (u.id === action.userId) {\r\n//             return { ...u, followed: true }\r\n//         }\r\n//         return u;\r\n//     }\r\n// )","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__29sgD\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.2aea4710.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"Post_ava__1RwCL\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__3pzK-\",\"ul\":\"NavBar_ul__2amjO\",\"item\":\"NavBar_item__1I6ss\",\"active\":\"NavBar_active__2twHf\"};","import React from 'react'\r\nimport classes from './FormsControl.module.css'\r\nimport { Field } from 'redux-form';\r\n\r\n\r\n\r\nexport const FormControl = ({ input, meta, child, ...props }) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\nexport const Textarea = (props) => {\r\n    const { input, meta,child, ...restProps } = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n\r\n}\r\n\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta,child, ...restProps } = props\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n\r\n}\r\n\r\nexport const createField = (name, placeholder, component, validates, props={}, text=\"\") => (\r\n    <div>\r\n        <Field name={name} placeholder={placeholder} component={component} validate={validates} {...props}/> {text}\r\n    </div>\r\n)","import React from 'react';\r\nimport classes from './NavBar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <div className={classes.navBar}>\r\n           <ul>\r\n               <li className={classes.item}><NavLink to='/profile' activeClassName={classes.active}>Profile</NavLink></li>\r\n               <li className={classes.item}><NavLink to='/dialogs' activeClassName={classes.active}>Dialogs</NavLink></li>\r\n               <li className={classes.item}><NavLink to='/users' activeClassName={classes.active}>Users</NavLink></li>\r\n               <li className={classes.item}><NavLink to='/news' activeClassName={classes.active}>News</NavLink></li>\r\n               <li className={classes.item}><NavLink to='/music' activeClassName={classes.active}>Music</NavLink></li>\r\n               <li className={classes.item}><NavLink to='/settings' activeClassName={classes.active}>Settings</NavLink></li>\r\n           </ul>\r\n        </div>\r\n    );\r\n}\r\nexport default NavBar;     ","import React from 'react';\r\nimport classes from './Footer.module.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className={classes.footer}>\r\n           <p>Copyright</p>\r\n        </div>\r\n    );\r\n}\r\nexport default Footer;","import React from 'react';\r\nimport './News.module.css';\r\n\r\n\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport './Music.module.css';\r\n\r\n\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport './Settings.module.css'\r\n\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React, {useState, useEffect} from 'react';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n   \r\nlet [editMode, setEditMode] = useState(false) ;\r\nlet [status, setStatus] = useState(props.status) ;\r\n\r\nuseEffect(()=>{\r\n    setStatus(props.status)\r\n}, [props.status])\r\n\r\nlet activateEditMode =() => {\r\n    setEditMode(true);\r\n}\r\n   \r\nlet deactivateEditMode =() => {\r\n\r\n    setEditMode(false);\r\n    props.updateStatus(status)\r\n\r\n}\r\n\r\nlet onStatusChange = (e) => {\r\n    \r\n        setStatus(e.currentTarget.value);\r\n    \r\n}\r\n      \r\n   return (\r\n        <div>\r\n            {!editMode &&\r\n             <div>\r\n                <span onDoubleClick ={activateEditMode}>{props.status || 'Status should be placed here'}</span>\r\n           </div>\r\n            }{editMode &&\r\n             <div>\r\n                <input onBlur={deactivateEditMode} autoFocus={true} onChange={onStatusChange} value={status}></input>\r\n           </div>}\r\n   </div>\r\n   )\r\n  }\r\n\r\n  \r\n  export default ProfileStatusWithHooks;\r\n  \r\n  //dispatch = {props.dispatch} store={props.store}\r\n\r\n  //let stateWithUseState = useState(false) ;  \r\n//    let editMode =   stateWithUseState[0];\r\n//    let setEditMode =  stateWithUseState[1];\r\n   ","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\nimport userPhoto from '../../../Assets/Photo/userPhoto.png'\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n\r\n   if (!props.profile) {\r\n      return <Preloader />\r\n   }\r\n   \r\n   const onMainPhotoSelected =(e) => {\r\n      if (e.target.files.length) {\r\n         props.savePhoto(e.target.files[0]);\r\n      }\r\n   }\r\n   debugger;\r\n    return ( \r\n       \r\n      <div className=\"wrapper-content\">\r\n          ProfileInfo\r\n         <div className={classes.descriptionBlock}>\r\n            <img src={props.profile.photos.large || userPhoto} alt='profile largePic' className={classes.avatar} />\r\n            {props.isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n            <div>{props.profile.fullName}</div>\r\n           \r\n            <ProfileStatusWithHooks status ={props.status} updateStatus= {props.updateStatus}/>\r\n               <h4>Looking for a job:</h4><div>{props.profile.lookingForAJob}</div>\r\n               <h4>Looking for a job decription:</h4><div>{props.profile.lookingForAJobDescription}</div>\r\n            \r\n                <h4>Contacts:</h4> \r\n                <ul>\r\n                   <li>{props.profile.contacts.github}</li>\r\n                   <li>{props.profile.contacts.vk}</li>\r\n                   <li>{props.profile.contacts.instagram}</li>\r\n                   <li>{props.profile.contacts.facebook}</li>\r\n                   <li>{props.profile.contacts.twitter}</li>\r\n                   <li>{props.profile.contacts.website}</li>\r\n                   <li>{props.profile.contacts.youtube}</li>\r\n                   <li>{props.profile.contacts.mainLink}</li>\r\n               </ul>\r\n               \r\n            ava+descroption\r\n         </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default ProfileInfo;\r\n  ","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n    <div>\r\n        <img className={classes.ava} src=\"https://i1.wp.com/sova.ponominalu.ru/wp-content/uploads/2019/08/ava-max.jpg?fit=2000%2C1333&ssl=1\" alt='p'/>\r\n        <div>\r\n        <div>\r\n          <span>{props.post}</span>\r\n         </div>\r\n          <span>Like {props.likesCounter}</span>\r\n         </div>\r\n         \r\n    </div>\r\n    );    \r\n  }\r\n  \r\n  export default Post;\r\n  ","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../../Utils/Validators'\r\nimport {Textarea} from '../../Common/FormsControl/FormsControl'\r\n\r\n\r\nconst MyPost = (props) => {\r\n\r\n\r\n  let postsElement = props.posts.map(p => <Post id={p.id} post={p.post}  likesCounter={p.likesCouter} />);\r\n  \r\n  // let newPostElement = React.createRef();\r\n\r\n\r\n  let onPostChange = (values) => {\r\n    props.addPost(values.newPostText)\r\n  \r\n  }\r\n\r\n\r\n    return ( \r\n \r\n      <div className=\"wrapper-content\">\r\n       <h3>My Posts</h3>\r\n       <MyPostForm onSubmit={onPostChange}/>\r\n       \r\n        {postsElement}\r\n       </div>\r\n    );\r\n  }\r\n\r\nconst MaxLength10 = maxLengthCreator(10);\r\nconst MyPostPreForm = (props) => {\r\n  return ( <form onSubmit={props.handleSubmit}>\r\n       <div>\r\n        <Field component={Textarea} name ={'newPostText'}  placeholder='Write your post' validate={[ required, MaxLength10]}/>\r\n       </div>\r\n       <div>\r\n         <button>Add post</button>\r\n        </div>\r\n       </form>\r\n  )\r\n}\r\n\r\nconst MyPostForm = reduxForm ({\r\n  form:'newPostText'\r\n})(MyPostPreForm)\r\n  export default MyPost;\r\n  \r\n\r\n//Before redux-form\r\n\r\n/* <div>\r\n         <textarea onChange = {onPostChange} ref={newPostElement} value ={props.newPostText}  placeholder='Write your post'></textarea>\r\n       </div>\r\n       <div>\r\n         <button onClick ={ onAddPost }>Add post</button>\r\n       </div> */\r\n\r\n\r\n      //  let text = newPostElement.current.value;\r\n      //  props.updateNewPostText(text);\r\n      // /* let action =  updateNewPostTextActionCreator(text);\r\n      //   props.dispatch(action); */\r\n\r\n      // let onAddPost  = () => {\r\n      //   props.addPost();\r\n    \r\n      //   //props.dispatch(addPostActionCreator());\r\n      \r\n      // }\r\n      ","import {usersAPI, profileAPI} from '../../Api/Api'\r\n\r\nconst ADD_POST = 'personalInfo/profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'personalInfo/profile/SET_USER_PROFILE'\r\nconst SET_STATUS = 'personalInfo/profile/SET_STATUS'\r\nconst SAVE_PHOTO_SUCCESS = 'personalInfo/profile/SAVE_PHOTO_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n    \r\n    postsData:[\r\n            {id:'1', post:\"Hi, how are you?\", likesCouter:'0'},\r\n            {id:'2', post:\"Fine, how is your work?\", likesCouter:'1'}\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n  \r\n\r\n} \r\nconst profileReducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id:'3', \r\n                post:action.newPostText, \r\n                likesCouter:'0' \r\n            };\r\n            \r\n            return {...state, postsData:[...state.postsData, newPost], };\r\n           \r\n        }\r\n       \r\n        case SET_USER_PROFILE:{\r\n            return {...state, profile:action.profile}; \r\n        }\r\n        case SET_STATUS:{\r\n            return {...state, status:action.status}; \r\n        }\r\n        case SAVE_PHOTO_SUCCESS:{\r\n            return {...state, profile:{...state.profile, photos:action.photos}}; \r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n   \r\n//ActionCreator\r\nexport const addPostActionCreator = (newPostText)=> ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setProfileStatus = (status) => ({ type: SET_STATUS, status })\r\nexport const savePhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\n//THUNK \r\nexport const getUsersId = (userId) => async (dispatch) => { \r\n  \r\n        let data =await usersAPI.getUsersId(userId);\r\n         \r\n            dispatch(setUserProfile(data))\r\n    } \r\n\r\n\r\nexport const getStatus = (userId) =>  async (dispatch) => { \r\n\r\n    let response =await profileAPI.getStatus(userId)\r\n           \r\n            dispatch(setProfileStatus(response.data));\r\n}\r\n\r\n\r\nexport const updateStatus = (status) => async (dispatch) => { \r\n        \r\n    let response =await profileAPI.updateStatus(status)\r\n         \r\n            if (response.data.resultCode === 0) {\r\n                \r\n            dispatch(setProfileStatus(status));\r\n    }\r\n}   \r\nexport const savePhoto = (file) => async (dispatch) => { \r\n        \r\n    let response =await profileAPI.savePhoto(file)\r\n         \r\n            if (response.data.resultCode === 0) {\r\n                \r\n            dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n   \r\nexport default profileReducer;\r\n\r\n//Another type of actions \r\n   /*    \r\n    if (action.type === ADD_POST)   {\r\n        let newPost = {id:'3', post:state.newPostText, likesCouter:'0' };\r\n        state.postsData.push(newPost);\r\n        state.newPostText = '';\r\n       \r\n  }\r\n  else if (action.type === UPDATE_NEW_POST_TEXT) {\r\n    state.newPostText = action.newText;\r\n       \r\n  } */\r\n\r\n\r\n\r\n  \r\n//before redux-form\r\n\r\n\r\n//const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n// export const updateNewPostTextActionCreator = (text) => ({  type: UPDATE_NEW_POST_TEXT, newText: text});\r\n // case UPDATE_NEW_POST_TEXT:{\r\n        //     return {...state, newPostText:action.newPostText}; \r\n        // }","import MyPost from './MyPost';\r\nimport {addPostActionCreator } from '../../../redux/Reducers/profile-reducer';\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n  return {\r\n    posts: state.profilePage.postsData,\r\n    newPostText:state.profilePage.newPostText\r\n  }\r\n};\r\nlet mapDispatchToProps = (dispatch) =>{\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    },\r\n    // updateNewPostText: (text) => {\r\n    //   let action =  updateNewPostTextActionCreator(text);\r\n    //   dispatch(action)\r\n\r\n    // }\r\n  }\r\n}\r\nlet MyPostContainer = connect (mapStateToProps,mapDispatchToProps)(MyPost);\r\n\r\nexport default MyPostContainer;\r\n  \r\n/* const MyPostContainer = () => {\r\n \r\n  return ( \r\n    <StoreContext.Consumer>\r\n       {\r\n      (store)=> {\r\n      let state = store.getState();\r\n\r\n      let addPost  = () => {\r\n         store.dispatch(addPostActionCreator()); \r\n}\r\n        let onPostChange = (text) => {\r\n        let action =  updateNewPostTextActionCreator(text);\r\n        store.dispatch(action);\r\n} \r\n  \r\n      return <MyPost addPost ={addPost} updateNewPostText ={onPostChange} posts={state.profilePage.postsData} newPostText={state.profilePage.newPostText} />\r\n      }}\r\n      </StoreContext.Consumer>\r\n  );\r\n} */","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostContainer from './MyPost/MyPostContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n   return (    \r\n      <div className=\"wrapper-content\">\r\n          Profile \r\n         <div>\r\n            <ProfileInfo isOwner ={props.isOwner}profile={props.profile} status={props.status} updateStatus = {props.updateStatus} savePhoto={props.savePhoto}/>\r\n         </div>\r\n         <div>\r\n            <MyPostContainer  />\r\n         </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Profile;\r\n  \r\n  //dispatch = {props.dispatch} store={props.store}","import React from 'react';\r\nimport Profile from '../Content/Profile'\r\nimport {getUsersId, updateStatus, getStatus, savePhoto} from '../../redux/Reducers/profile-reducer'\r\nimport {connect} from 'react-redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport {compose} from 'redux'\r\n//import { getProfile, getStatusSelector, getIsAuth } from '../../redux/Selectors/profile-selectors';\r\n//import  {withAuthRedirect} from '../HOC/withAuthRedirect';\r\n//getAuthorizedUserId\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n   \r\n   refreshProfile () {\r\n      let userId = this.props.match.params.userId;\r\n      if (!userId) {\r\n          userId = this.props.authorizedUserId;\r\n          if (!userId) { \r\n            this.props.history.push('/login')\r\n         }\r\n      }\r\n      this.props.getUsersId(userId)\r\n      this.props.getStatus(userId)\r\n   }\r\n   componentDidMount() {\r\n      this.refreshProfile();\r\n}\r\n   componentDidUpdate(prevProps, prevState, snapshot) {\r\n      if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n   }\r\n   }\r\n\r\n   render() {\r\n\r\n   return (    \r\n     <Profile {...this.props} profile={this.props.profile} status ={this.props.status} updateStatus = {this.props.updateStatus} isOwner={!this.props.match.params.userId} savePhoto={this.props.savePhoto}/>\r\n    );\r\n  }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n      profile: state.profilePage.profile,\r\n      status:  state.profilePage.status,\r\n      authorizedUserId: state.auth.id,\r\n      isAuth: state.auth.isAuth\r\n  }); \r\n\r\n\r\nexport default compose (withRouter, connect (mapStateToProps, {getUsersId, getStatus, updateStatus, savePhoto})) (ProfileContainer)\r\n  \r\n\r\n//withAuthRedirect\r\n//dispatch = {props.dispatch} store={props.store}\r\n\r\n//Dispatch\r\n   /* usersAPI.getUsersId(userId).then(data =>{\r\n                this.props.setUserProfile(data);\r\n   }); */\r\n\r\n\r\n//Callbacks before compose () ()\r\n\r\n   /* \r\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\nexport default connect (mapStateToProps, {getUserId})(WithUrlDataContainerComponent); */\r\n\r\n\r\n//mapStateToProps\r\n// let mapStateToProps = (state) => ({\r\n//    profile: state.profilePage.profile,\r\n//    status:  state.profilePage.status,\r\n//    authorizedUserId: state.auth.userId,\r\n//    isAuth:state.auth.isAuth\r\n// }); ","import React from 'react';\r\nimport logo from './logo.svg'\r\nimport classes from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <header className={classes.header}>\r\n             <img src={logo} className={classes.logo} alt=\"logo\" /> \r\n             <div className = {classes.loginBlock}>\r\n             {props.isAuth\r\n             ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n              : <NavLink to= '/login'>Login</NavLink>}\r\n             </div>\r\n        </header>\r\n    );\r\n}\r\nexport default Header;","import {headersAPI} from '../../Api/Api'\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst SET_USER_DATA =  'auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    \r\n\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n    \r\n\r\n} \r\n\r\nconst authReducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA: {   \r\n            return { ...state,\r\n                     ...action.payload,\r\n                     \r\n            } \r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n  \r\n//ActionCreators\r\n\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({  type: SET_USER_DATA, payload: {id, email, login, isAuth}});\r\n\r\n//ThunkFunctions\r\n\r\n\r\nexport const auth = () => async (dispatch) => {\r\n\r\n        let data = await headersAPI.headerAuth();\r\n\r\n            if (data.resultCode === 0) {\r\n                let {id, login, email} = data.data;\r\n                    dispatch(setAuthUserData(id, email, login, true))\r\n            }\r\n    };  \r\nexport const login = (email, password, rememberMe) => async (dispatch) => { \r\n\r\n        let data = await headersAPI.login(email, password, rememberMe)\r\n\r\n            if (data.resultCode === 0) {\r\n                    dispatch(auth())\r\n            }\r\n            else {\r\n            dispatch(stopSubmit('login', {_error:data.messages}))\r\n    }  \r\n}\r\nexport const logout = () => async (dispatch) => { \r\n\r\n       let data = await headersAPI.logout();\r\n            if (data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n    }  \r\n\r\n\r\n\r\nexport default authReducer;            ","import React from 'react';\r\nimport  Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../redux/Reducers/auth-reducer'\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n   \r\n    render() {\r\n        return  <Header {...this.props} />;\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n\r\n});\r\nexport default connect (mapStateToProps, {logout})(HeaderContainer);\r\n\r\n\r\n/*   if (data.resultCode === 0) {\r\n                    let {id, email, login} = data.data;\r\n                    this.props.setAuthUserData(id, email, login)\r\n                }*/","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport {Input} from '../Common/FormsControl/FormsControl'\r\nimport { required} from '../../Utils/Validators'\r\nimport {login} from '../../redux/Reducers/auth-reducer'\r\nimport {connect} from 'react-redux'\r\nimport { Redirect } from 'react-router-dom';\r\nimport classes from '../../Components/Common/FormsControl/FormsControl.module.css';\r\nimport {createField} from '../../Components/Common/FormsControl/FormsControl'\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n  \r\n    //const  maxLength= maxLengthCreator(10);\r\n    return (  \r\n         <form onSubmit={handleSubmit}>\r\n             {createField('email', 'Login', Input, [required])}\r\n             {createField('password', 'Password', Input, [required],  {type:'password'})}\r\n             {createField('rememberMe', null , Input, [], {type:'checkbox'}, 'Remember me')}\r\n           \r\n            { error && <div className={classes.formControlError}>\r\n              {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n        )\r\n}\r\nlet LoginReduxForm = reduxForm ({\r\n    form: 'login'\r\n}) (LoginForm);\r\n\r\n\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe )\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n   \r\n    return <>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n        </>\r\n    \r\n}\r\n\r\nconst mapStateToProps =(state) =>({\r\n    isAuth:state.auth.isAuth\r\n\r\n})\r\n//export default Login;\r\nexport default connect (mapStateToProps, {login}) (Login);\r\n\r\n\r\n\r\n// <div>\r\n// <Field name={'email'} placeholder={'Login'} component={Input} validate={[required]} />\r\n// </div>\r\n// <div>\r\n// <Field name={'password'}  placeholder={'Password'} component={Input} validate={[required]} type={'password'}/>\r\n// </div>\r\n// <div>\r\n// <Field type={'checkbox'} name={'rememberMe'} component={Input}  />\r\n//  <span>Remember me</span>\r\n// </div>\r\n","import {auth} from '../Reducers/auth-reducer'\r\n\r\nconst SET_INITIALIZED =  'app/SET_INITIALIZED';\r\n\r\n\r\nlet initialState = {\r\n  \r\n    initialized: false\r\n    \r\n\r\n} \r\n\r\nconst appReducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_INITIALIZED: {   \r\n            return { ...state,\r\n                     initialized: true\r\n            } \r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n  \r\n//ActionCreators\r\n\r\n\r\nexport const initializedSuccess = () => ({ type: SET_INITIALIZED});\r\n\r\n//ThunkFunctions\r\n\r\n\r\nexport const initializedApp = () => (dispatch) => { \r\n\r\n        let promise = dispatch(auth())\r\n        Promise.all([promise])\r\n        .then(()=> {\r\n            dispatch(initializedSuccess())\r\n        });\r\n    }  \r\n\r\nexport default appReducer;            "," let initialState= {}; \r\n\r\nconst sidebarReducer = (state=initialState, action) => {\r\n    return state;\r\n}\r\nexport default sidebarReducer;","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport dialogsReducer from './Reducers/dialogs-reducer';\r\nimport profileReducer from './Reducers/profile-reducer';\r\nimport sidebarReducer from './Reducers/sidebar-reducer';\r\nimport usersReducer from \"./Reducers/users-reducer\";\r\nimport authReducer from \"./Reducers/auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './Reducers/app-reducer'\r\nimport { compose } from 'redux';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form:formReducer,\r\n    app:appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store =store;\r\nexport default store;","import React from 'react';\r\nimport Preloader from '../Preloader/Preloader';\r\n\r\n\r\nexport let withLazy = (Component) => (props) => {\r\n    return (<React.Suspense fallback={<Preloader />}>\r\n                 <Component {...props}/>\r\n            </React.Suspense>)\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport NavBar from './Components/NavBar/NavBar';\nimport Footer from './Components/Footer/Footer';\nimport News from './Components/NavBar/News/News';\nimport Music from './Components/NavBar/Music/Music';\nimport Settings from './Components/NavBar/Settings/Settings';\nimport { Route } from 'react-router-dom';\nimport ProfileContainer from './Components/Content/ProfileContainer';\nimport HeaderContainer from './Components/Header/HeaderContainer';\nimport Login from './Components/Login/Login'\nimport {connect} from 'react-redux'\nimport {initializedApp} from '../src/redux/Reducers/app-reducer'\nimport Preloader from './Components/Common/Preloader/Preloader';\nimport { withRouter } from 'react-router-dom';\nimport {compose} from 'redux'\nimport {Provider} from 'react-redux'\nimport {HashRouter} from 'react-router-dom'\nimport store from './redux/redux-store';\nimport {withLazy} from './Components/Common/Lazy/withLazySuspense'\n\n//import UsersContainer  from './Components/Users/UsersContainer';\n//import DialogsContainer from './Components/NavBar/Dialogs/DialogsContainer';\n\nconst UsersContainer = React.lazy(() => import('./Components/Users/UsersContainer'));\nconst DialogsContainer = React.lazy(() => import('./Components/NavBar/Dialogs/DialogsContainer'));\n\n\nclass App extends React.Component {\n\n  componentDidMount(){\n      this.props.initializedApp();\n\n }\n\nrender() {\n\n      if (!this.props.initialized) {\n        return <Preloader />\n  }\n\n  return ( <div className=\"wrapper\">\n \n      <HeaderContainer />\n      <NavBar />\n      <div className=\"wrapper-content\">\n        <Route path='/dialogs' render={withLazy(DialogsContainer)}/>\n        <Route path='/profile/:userId?' render={() => <ProfileContainer /> }/>\n        <Route path='/users' render={withLazy(UsersContainer)}/>\n        <Route path='/login' render={() => <Login /> }/>\n        <Route path='/news' component={News} />\n        <Route path='/settings' component={Settings} />\n        <Route path='/music' component={Music} />\n      </div>\n      <Footer />\n     </div> \n       \n    \n  );\n}\n}\n\nconst mapStateToProps = (state) => ({\n    initialized:state.app.initialized\n });\n\n\n\n\nconst AppWithRouter = compose ( withRouter, connect (mapStateToProps, {initializedApp})) (App);\n\nconst  AppMain = (props) => {\nreturn (<HashRouter > \n    <Provider store={store}>\n      <AppWithRouter  />\n    </Provider>\n    </HashRouter>)\n}\n\nexport default AppMain; \n\n\n\n//export default App;\n//dialogsData = {props.state.dialogPage.dialogsData} messagesData={props.state.dialogPage.messagesData} dispatch={props.dispatch} newMessageBody={props.state.dialogPage.newMessageBody}\n//postsData = {props.state.profilePage.postsData} dispatch={props.dispatch} newPostText={props.state.profilePage.newPostText} \n//store={props.store}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import * as serviceWorker from './serviceWorker';\nimport AppMain from './App'\n\n\n\n\n  \nReactDOM.render(  <AppMain   />, document.getElementById('root'));\n  \n\n\n//let rerenderEntireTree = () => {\n/* }\nrerenderEntireTree(store.getState()); */\n\n//store.subscribe(rerenderEntireTree());\n\n/* store.subscribe ( ()=> {\n  let state = store.getState();\n  rerenderEntireTree(state);\n});  */\n//мы больше не подписываемся на изменения потому что функция connect  перерисовывает локально изменения.\n\n//serviceWorker.unregister();\n\n\n//state = {store._state}\n//store={store} state={state} dispatch={store.dispatch.bind(store)} ","import React from 'react';\r\nimport preLoader from '../../../Assets/Photo/preloader.svg'\r\n\r\nlet Preloader =(props) => {\r\n    return <>\r\n        <div> <img src={preLoader}   alt='preloader'/> </div>\r\n        </>\r\n}\r\n\r\nexport default Preloader;   ","export const required = (value) => {\r\n   if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n if(value.length && value.length >= maxLength) return `Field should contain ${maxLength} symbols`;\r\n return undefined;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__2iHH5\",\"error\":\"FormsControl_error__2owc3\",\"formControlError\":\"FormsControl_formControlError__3kTtw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Q_Xh\",\"logo\":\"Header_logo__2ip53\",\"loginBlock\":\"Header_loginBlock__375zB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__30jTl\",\"avatar\":\"ProfileInfo_avatar__3L1e9\"};","module.exports = __webpack_public_path__ + \"static/media/userPhoto.6db09181.png\";"],"sourceRoot":""}